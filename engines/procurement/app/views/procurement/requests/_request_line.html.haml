:ruby
  state, label_class = state_label(procurement_request)
  procurement_inspector_or_admin = procurement_inspector_or_admin?

- cache [procurement_request, state, label_class, 'procurement_inspector_or_admin', procurement_inspector_or_admin] do

  %a.list-group-item.row{href: category_budget_period_user_requests_path(procurement_request.category, procurement_request.budget_period, procurement_request.user, request_id: procurement_request.id), data: {request_id: procurement_request.id}}
    .col-sm-2
      = procurement_request.article_name
    .col-sm-2
      = procurement_request.user
    .col-sm-2
      = procurement_request.organization.parent
      %br
      = procurement_request.organization
    .col-sm-1
      .label.label-custom.total_price
        %i.fa.fa-tag
        = money_without_cents_and_with_symbol procurement_request.price, false
    .col-sm-2.quantities
      .label{class: label_class, data: {toggle: 'tooltip'}, title: _('Requested quantity')}
        = procurement_request.requested_quantity
        %i.fa.fa-question
      .label{class: label_class, data: {toggle: 'tooltip'}, title: _('Approved quantity')}
        - if procurement_request.approved_quantity
          = procurement_request.approved_quantity
          %i.fa.fa-check
        - else
          &nbsp;
      - if procurement_inspector_or_admin?
        .label{class: label_class, data: {toggle: 'tooltip'}, title: _('Order quantity')}
          - if procurement_request.order_quantity
            = procurement_request.order_quantity
            %i.fa.fa-shopping-cart
          - else
            &nbsp;
    .col-sm-1
      .label.label-primary.total_price
        %i.fa.fa-shopping-cart
        = money_without_cents_and_with_symbol procurement_request.total_price(current_user), false
    .col-sm-1
      .label.label-default= _(procurement_request.priority.capitalize)
    .col-sm-1
      .label{class: label_class}
        = _(state.to_s.humanize)
